#
# NCURSES 5.XX Version 1.
#
# This configuration file configure's, make's and install's NCURSES
# NOTE: the versioning is not automatically updatable, because the RTEMS
#       project favors having only one supported version of ncurses for each
#       rtems release

%include %{_configdir}/checks.cfg

%define rtems_kernel_version %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi rtems_api
%define ar_for_target %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi ar_for_target
%define as_for_target %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi as_for_target
%define cc_for_target %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi cc_for_target
%define cxx_for_target %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi cxx_for_target
%define ld_for_target %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi ld_for_target
%define nm_for_target %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi nm_for_target
%define objcopy_for_target %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi objcopy_for_target
%define size_for_target %{_sbdir}/sb_rtems_config --rtems=%{_prefix} --rtems-bsp={_target}/raspberrypi size_for_target

%define ncurses_version 5.9

Name:      %{_target}-ncurses-%{ncurses_version}
Summary:   NCURSES for target %{_target}
URL: 	   http://www.gnu.org/software/ncurses/

#
# Source
#
%ifn %{defined Source0}
 Source0: http://ftp.gnu.org/pub/gnu/ncurses/ncurses-%{ncurses_version}.tar.gz
%endif

#
# Prepare the source code.
#
%prep
  source_dir_0="ncurses-%{ncurses_version}"
  %setup -q -c -n %{name}-%{version}
  cd ${source_dir_0}
  %{?patch0:%patch0 %{?patch0_opts:%{patch0_opts}}%{!?patch0_opts:-p1}}
  %{?patch1:%patch1 %{?patch1_opts:%{patch1_opts}}%{!?patch1_opts:-p1}}
  %{?patch2:%patch2 %{?patch2_opts:%{patch2_opts}}%{!?patch2_opts:-p1}}
  %{?patch3:%patch3 %{?patch3_opts:%{patch3_opts}}%{!?patch3_opts:-p1}}
  %{?patch4:%patch4 %{?patch4_opts:%{patch4_opts}}%{!?patch4_opts:-p1}}
  %{?patch5:%patch5 %{?patch5_opts:%{patch5_opts}}%{!?patch5_opts:-p1}}
  %{?patch6:%patch6 %{?patch6_opts:%{patch6_opts}}%{!?patch6_opts:-p1}}
  %{?patch7:%patch7 %{?patch7_opts:%{patch7_opts}}%{!?patch7_opts:-p1}}
  %{?patch8:%patch8 %{?patch8_opts:%{patch8_opts}}%{!?patch8_opts:-p1}}
  %{?patch9:%patch9 %{?patch9_opts:%{patch9_opts}}%{!?patch9_opts:-p1}}
  cd ..

%build
  # Build directory support.
  if test "%{_build}" != "%{_host}" ; then
    build_dir="build-cxc"
  else
    build_dir="build"
  fi
  mkdir -p ${build_dir}
  cd ${build_dir}
#  $(SIZE)=${size_for_target} \
  cf_cv_type_of_bool=char CXX="$(CC)" TERM=xterm \
    ../${source_dir_0}/configure \
    --host=${_target} \
    --prefix=${exec_prefix} \
    --libdir=${exec_prefix}/${RTEMS_BSP}/lib \
    --includedir=${exec_prefix}/${RTEMS_BSP}/lib/include \
    --without-ada \
    --without-progs \
    --without-cxx-binding \
    --disable-sigwinch \
    --disable-database \
    --with-fallbacks="xterm,vt100,linux,ansi"

    %{__make} "TERM=xterm" "HOSTCC=gcc" "HOSTCCFLAGS=-I. -I../include" HOSTLDFLAGS=""
  cd ..

%install
  %{__rmdir} $SB_BUILD_ROOT

  cd ${build_dir}
    %{__make} DESTDIR=$SB_BUILD_ROOT install
  cd ..

%testing
